// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/risingwavelabs/terraform-provider-risingwavecloud/internal/provider (interfaces: DataExtractHelperInterface)

// Package provider is a generated GoMock package.
package provider

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	diag "github.com/hashicorp/terraform-plugin-framework/diag"
)

// MockDataExtractHelperInterface is a mock of DataExtractHelperInterface interface.
type MockDataExtractHelperInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDataExtractHelperInterfaceMockRecorder
}

// MockDataExtractHelperInterfaceMockRecorder is the mock recorder for MockDataExtractHelperInterface.
type MockDataExtractHelperInterfaceMockRecorder struct {
	mock *MockDataExtractHelperInterface
}

// NewMockDataExtractHelperInterface creates a new mock instance.
func NewMockDataExtractHelperInterface(ctrl *gomock.Controller) *MockDataExtractHelperInterface {
	mock := &MockDataExtractHelperInterface{ctrl: ctrl}
	mock.recorder = &MockDataExtractHelperInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataExtractHelperInterface) EXPECT() *MockDataExtractHelperInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockDataExtractHelperInterface) Get(arg0 context.Context, arg1 DataGetter, arg2 interface{}) diag.Diagnostics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(diag.Diagnostics)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockDataExtractHelperInterfaceMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDataExtractHelperInterface)(nil).Get), arg0, arg1, arg2)
}

// Set mocks base method.
func (m *MockDataExtractHelperInterface) Set(arg0 context.Context, arg1 DataSetter, arg2 interface{}) diag.Diagnostics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0, arg1, arg2)
	ret0, _ := ret[0].(diag.Diagnostics)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockDataExtractHelperInterfaceMockRecorder) Set(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockDataExtractHelperInterface)(nil).Set), arg0, arg1, arg2)
}
